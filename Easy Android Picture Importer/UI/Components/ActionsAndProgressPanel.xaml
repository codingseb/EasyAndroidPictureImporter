<UserControl x:Class="EasyAndroidPictureImporter.UI.Components.ActionsAndProgressPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EasyAndroidPictureImporter.UI.Components"
             xmlns:di="clr-namespace:EasyAndroidPictureImporter.DependencyInjection"
             xmlns:vm="clr-namespace:EasyAndroidPictureImporter.ViewModel"
             mc:Ignorable="d" 
             DataContext="{di:DIResolve vm:MainViewModel}"
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
             d:DesignWidth="200">
    <StackPanelEx MarginBetweenChildren="5"
                  Margin="0,5">
        <TextBlock Text="{Binding ImportState}"
                   HorizontalAlignment="Center"
                   Visibility="{Binding IsImporting, Converter={CustomBoolToVisibilityConverter}}"/>
        <ProgressBar Maximum="{Binding ImportMax}" 
                     Value="{Binding ImportProgress}"
                     Margin="0"
                     Height="6"
                     Visibility="{Binding IsImporting, Converter={CustomBoolToVisibilityConverter}}">
            <ProgressBar.Resources>
                <Style TargetType="Border" >
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
                <Style TargetType="Rectangle" >
                    <Setter Property="RadiusX" Value="3" />
                    <Setter Property="RadiusY" Value="3" />
                    <Setter Property="Margin" Value="1" />
                </Style>
            </ProgressBar.Resources>
        </ProgressBar>
        <Button x:Name="ImportButton" 
                Content="{Tr Import}"
                Command="{Binding ImportCheckedFilesCommand}"
                Padding="10"
                Foreground="WhiteSmoke"
                FontWeight="Bold"
                Visibility="{Binding IsImporting, Converter={CustomBoolToVisibilityConverter FalseValue=Visible, TrueValue=Collapsed}}"
                BorderBrush="Transparent">
            <Button.IsEnabled>
                <MultiBinding Converter="{BoolMultiBindingAndConditionConverter}">
                    <Binding Path="SelectedDevice.SelectedDirectory.IsCheckedFilesCount" 
                             Converter="{IntToBoolConverter FalseValue=0, BiggerThanTrueValue=0, DefaultValue=False}"
                             FallbackValue="False" />
                    <Binding Path="IsImporting" Converter="{BoolReverseConverter}" />
                </MultiBinding>
            </Button.IsEnabled>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#34A853" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" 
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                                    <Label Content="{TemplateBinding Content}"
                                           x:Name="Label"
                                           Padding="0"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#3fce65" TargetName="Border" />
                                        <Setter Property="Foreground" Value="Black" TargetName="Label" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="WhiteSmoke" TargetName="Border" />
                                        <Setter Property="Foreground" Value="Gray" TargetName="Label" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="CancelButton"
                IsCancel="True"
                Content="{Tr Cancel}"
                Command="{Binding CancelImportCommand}"
                Padding="10"
                Foreground="WhiteSmoke"
                FontWeight="Bold"
                Visibility="{Binding IsImporting, Converter={CustomBoolToVisibilityConverter}}"
                BorderBrush="Transparent">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#ea4335" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                    <Label Content="{TemplateBinding Content}"
                                           x:Name="Label"
                                           Padding="0"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#ff6339" TargetName="Border" />
                                        <Setter Property="Foreground" Value="Black" TargetName="Label" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="WhiteSmoke" TargetName="Border" />
                                        <Setter Property="Foreground" Value="Gray" TargetName="Label" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </Button.Resources>
        </Button>
    </StackPanelEx>
</UserControl>
